/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package cs.ucla.edu.avro.fastq;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class PairEndFASTQRecord extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PairEndFASTQRecord\",\"namespace\":\"cs.ucla.edu.avro.fastq\",\"fields\":[{\"name\":\"seq1\",\"type\":{\"type\":\"record\",\"name\":\"FASTQRecord\",\"fields\":[{\"name\":\"name\",\"type\":\"bytes\"},{\"name\":\"seq\",\"type\":\"bytes\"},{\"name\":\"quality\",\"type\":\"bytes\"},{\"name\":\"seqLength\",\"type\":\"int\"},{\"name\":\"comment\",\"type\":\"bytes\",\"default\":null}]}},{\"name\":\"seq2\",\"type\":\"FASTQRecord\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public cs.ucla.edu.avro.fastq.FASTQRecord seq1;
  @Deprecated public cs.ucla.edu.avro.fastq.FASTQRecord seq2;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public PairEndFASTQRecord() {}

  /**
   * All-args constructor.
   */
  public PairEndFASTQRecord(cs.ucla.edu.avro.fastq.FASTQRecord seq1, cs.ucla.edu.avro.fastq.FASTQRecord seq2) {
    this.seq1 = seq1;
    this.seq2 = seq2;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return seq1;
    case 1: return seq2;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: seq1 = (cs.ucla.edu.avro.fastq.FASTQRecord)value$; break;
    case 1: seq2 = (cs.ucla.edu.avro.fastq.FASTQRecord)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'seq1' field.
   */
  public cs.ucla.edu.avro.fastq.FASTQRecord getSeq1() {
    return seq1;
  }

  /**
   * Sets the value of the 'seq1' field.
   * @param value the value to set.
   */
  public void setSeq1(cs.ucla.edu.avro.fastq.FASTQRecord value) {
    this.seq1 = value;
  }

  /**
   * Gets the value of the 'seq2' field.
   */
  public cs.ucla.edu.avro.fastq.FASTQRecord getSeq2() {
    return seq2;
  }

  /**
   * Sets the value of the 'seq2' field.
   * @param value the value to set.
   */
  public void setSeq2(cs.ucla.edu.avro.fastq.FASTQRecord value) {
    this.seq2 = value;
  }

  /** Creates a new PairEndFASTQRecord RecordBuilder */
  public static cs.ucla.edu.avro.fastq.PairEndFASTQRecord.Builder newBuilder() {
    return new cs.ucla.edu.avro.fastq.PairEndFASTQRecord.Builder();
  }
  
  /** Creates a new PairEndFASTQRecord RecordBuilder by copying an existing Builder */
  public static cs.ucla.edu.avro.fastq.PairEndFASTQRecord.Builder newBuilder(cs.ucla.edu.avro.fastq.PairEndFASTQRecord.Builder other) {
    return new cs.ucla.edu.avro.fastq.PairEndFASTQRecord.Builder(other);
  }
  
  /** Creates a new PairEndFASTQRecord RecordBuilder by copying an existing PairEndFASTQRecord instance */
  public static cs.ucla.edu.avro.fastq.PairEndFASTQRecord.Builder newBuilder(cs.ucla.edu.avro.fastq.PairEndFASTQRecord other) {
    return new cs.ucla.edu.avro.fastq.PairEndFASTQRecord.Builder(other);
  }
  
  /**
   * RecordBuilder for PairEndFASTQRecord instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PairEndFASTQRecord>
    implements org.apache.avro.data.RecordBuilder<PairEndFASTQRecord> {

    private cs.ucla.edu.avro.fastq.FASTQRecord seq1;
    private cs.ucla.edu.avro.fastq.FASTQRecord seq2;

    /** Creates a new Builder */
    private Builder() {
      super(cs.ucla.edu.avro.fastq.PairEndFASTQRecord.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(cs.ucla.edu.avro.fastq.PairEndFASTQRecord.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.seq1)) {
        this.seq1 = data().deepCopy(fields()[0].schema(), other.seq1);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.seq2)) {
        this.seq2 = data().deepCopy(fields()[1].schema(), other.seq2);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing PairEndFASTQRecord instance */
    private Builder(cs.ucla.edu.avro.fastq.PairEndFASTQRecord other) {
            super(cs.ucla.edu.avro.fastq.PairEndFASTQRecord.SCHEMA$);
      if (isValidValue(fields()[0], other.seq1)) {
        this.seq1 = data().deepCopy(fields()[0].schema(), other.seq1);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.seq2)) {
        this.seq2 = data().deepCopy(fields()[1].schema(), other.seq2);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'seq1' field */
    public cs.ucla.edu.avro.fastq.FASTQRecord getSeq1() {
      return seq1;
    }
    
    /** Sets the value of the 'seq1' field */
    public cs.ucla.edu.avro.fastq.PairEndFASTQRecord.Builder setSeq1(cs.ucla.edu.avro.fastq.FASTQRecord value) {
      validate(fields()[0], value);
      this.seq1 = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'seq1' field has been set */
    public boolean hasSeq1() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'seq1' field */
    public cs.ucla.edu.avro.fastq.PairEndFASTQRecord.Builder clearSeq1() {
      seq1 = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'seq2' field */
    public cs.ucla.edu.avro.fastq.FASTQRecord getSeq2() {
      return seq2;
    }
    
    /** Sets the value of the 'seq2' field */
    public cs.ucla.edu.avro.fastq.PairEndFASTQRecord.Builder setSeq2(cs.ucla.edu.avro.fastq.FASTQRecord value) {
      validate(fields()[1], value);
      this.seq2 = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'seq2' field has been set */
    public boolean hasSeq2() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'seq2' field */
    public cs.ucla.edu.avro.fastq.PairEndFASTQRecord.Builder clearSeq2() {
      seq2 = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public PairEndFASTQRecord build() {
      try {
        PairEndFASTQRecord record = new PairEndFASTQRecord();
        record.seq1 = fieldSetFlags()[0] ? this.seq1 : (cs.ucla.edu.avro.fastq.FASTQRecord) defaultValue(fields()[0]);
        record.seq2 = fieldSetFlags()[1] ? this.seq2 : (cs.ucla.edu.avro.fastq.FASTQRecord) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
